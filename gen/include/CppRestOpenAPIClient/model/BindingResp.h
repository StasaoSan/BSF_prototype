/**
 * Nbsf_Management
 * Binding Support Management Service API.    Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).    All rights reserved.  
 *
 * The version of the OpenAPI document: 1.3.2
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.7.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * BindingResp.h
 *
 * Contains the binding information for a PCF for a PDU Session.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_BindingResp_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_BindingResp_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/IpEndPoint.h"
#include <cpprest/details/basic_types.h>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class IpEndPoint;


/// <summary>
/// Contains the binding information for a PCF for a PDU Session.
/// </summary>
class  BindingResp
    : public ModelBase
{
public:
    BindingResp();
    virtual ~BindingResp();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// BindingResp members

    /// <summary>
    /// Fully Qualified Domain Name
    /// </summary>
    utility::string_t getPcfSmFqdn() const;
    bool pcfSmFqdnIsSet() const;
    void unsetPcfSmFqdn();

    void setPcfSmFqdn(const utility::string_t& value);

    /// <summary>
    /// IP end points of the PCF hosting the Npcf_SMPolicyControl service.
    /// </summary>
    std::vector<std::shared_ptr<IpEndPoint>>& getPcfSmIpEndPoints();
    bool pcfSmIpEndPointsIsSet() const;
    void unsetPcfSmIpEndPoints();

    void setPcfSmIpEndPoints(const std::vector<std::shared_ptr<IpEndPoint>>& value);


protected:
    utility::string_t m_PcfSmFqdn;
    bool m_PcfSmFqdnIsSet;
    std::vector<std::shared_ptr<IpEndPoint>> m_PcfSmIpEndPoints;
    bool m_PcfSmIpEndPointsIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_BindingResp_H_ */
