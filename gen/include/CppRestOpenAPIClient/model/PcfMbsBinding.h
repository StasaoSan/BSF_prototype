/**
 * Nbsf_Management
 * Binding Support Management Service API.    © 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).    All rights reserved.  
 *
 * The version of the OpenAPI document: 1.3.2
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.7.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * PcfMbsBinding.h
 *
 * Represents an Individual PCF for an MBS Session binding.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_PcfMbsBinding_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_PcfMbsBinding_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/IpEndPoint.h"
#include "CppRestOpenAPIClient/model/BindingLevel.h"
#include <cpprest/details/basic_types.h>
#include "CppRestOpenAPIClient/model/MbsSessionId.h"
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class MbsSessionId;
class IpEndPoint;


/// <summary>
/// Represents an Individual PCF for an MBS Session binding.
/// </summary>
class  PcfMbsBinding
    : public ModelBase
{
public:
    PcfMbsBinding();
    virtual ~PcfMbsBinding();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// PcfMbsBinding members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<MbsSessionId> getMbsSessionId() const;
    bool mbsSessionIdIsSet() const;
    void unsetMbsSessionId();

    void setMbsSessionId(const std::shared_ptr<MbsSessionId>& value);

    /// <summary>
    /// Fully Qualified Domain Name
    /// </summary>
    utility::string_t getPcfFqdn() const;
    bool pcfFqdnIsSet() const;
    void unsetPcfFqdn();

    void setPcfFqdn(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<IpEndPoint>>& getPcfIpEndPoints();
    bool pcfIpEndPointsIsSet() const;
    void unsetPcfIpEndPoints();

    void setPcfIpEndPoints(const std::vector<std::shared_ptr<IpEndPoint>>& value);

    /// <summary>
    /// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.  
    /// </summary>
    utility::string_t getPcfId() const;
    bool pcfIdIsSet() const;
    void unsetPcfId();

    void setPcfId(const utility::string_t& value);

    /// <summary>
    /// NF Set Identifier (see clause 28.12 of 3GPP TS 23.003), formatted as the following string \&quot;set&lt;Set ID&gt;.&lt;nftype&gt;set.5gc.mnc&lt;MNC&gt;.mcc&lt;MCC&gt;\&quot;, or  \&quot;set&lt;SetID&gt;.&lt;NFType&gt;set.5gc.nid&lt;NID&gt;.mnc&lt;MNC&gt;.mcc&lt;MCC&gt;\&quot; with  &lt;MCC&gt; encoded as defined in clause 5.4.2 (\&quot;Mcc\&quot; data type definition)  &lt;MNC&gt; encoding the Mobile Network Code part of the PLMN, comprising 3 digits.    If there are only 2 significant digits in the MNC, one \&quot;0\&quot; digit shall be inserted    at the left side to fill the 3 digits coding of MNC.  Pattern: &#39;^[0-9]{3}$&#39; &lt;NFType&gt; encoded as a value defined in Table 6.1.6.3.3-1 of 3GPP TS 29.510 but    with lower case characters &lt;Set ID&gt; encoded as a string of characters consisting of    alphabetic characters (A-Z and a-z), digits (0-9) and/or the hyphen (-) and that    shall end with either an alphabetic character or a digit.  
    /// </summary>
    utility::string_t getPcfSetId() const;
    bool pcfSetIdIsSet() const;
    void unsetPcfSetId();

    void setPcfSetId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<BindingLevel> getBindLevel() const;
    bool bindLevelIsSet() const;
    void unsetBindLevel();

    void setBindLevel(const std::shared_ptr<BindingLevel>& value);

    /// <summary>
    /// string with format &#39;date-time&#39; as defined in OpenAPI.
    /// </summary>
    utility::datetime getRecoveryTime() const;
    bool recoveryTimeIsSet() const;
    void unsetRecoveryTime();

    void setRecoveryTime(const utility::datetime& value);

    /// <summary>
    /// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \&quot;0\&quot; to \&quot;9\&quot;,  \&quot;a\&quot; to \&quot;f\&quot; or \&quot;A\&quot; to \&quot;F\&quot; and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported. 
    /// </summary>
    utility::string_t getSuppFeat() const;
    bool suppFeatIsSet() const;
    void unsetSuppFeat();

    void setSuppFeat(const utility::string_t& value);


protected:
    std::shared_ptr<MbsSessionId> m_MbsSessionId;
    bool m_MbsSessionIdIsSet;
    utility::string_t m_PcfFqdn;
    bool m_PcfFqdnIsSet;
    std::vector<std::shared_ptr<IpEndPoint>> m_PcfIpEndPoints;
    bool m_PcfIpEndPointsIsSet;
    utility::string_t m_PcfId;
    bool m_PcfIdIsSet;
    utility::string_t m_PcfSetId;
    bool m_PcfSetIdIsSet;
    std::shared_ptr<BindingLevel> m_BindLevel;
    bool m_BindLevelIsSet;
    utility::datetime m_RecoveryTime;
    bool m_RecoveryTimeIsSet;
    utility::string_t m_SuppFeat;
    bool m_SuppFeatIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_PcfMbsBinding_H_ */
