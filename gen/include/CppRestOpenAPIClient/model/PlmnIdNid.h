/**
 * Nbsf_Management
 * Binding Support Management Service API.    Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).    All rights reserved.  
 *
 * The version of the OpenAPI document: 1.3.2
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.7.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * PlmnIdNid.h
 *
 * Contains the serving core network operator PLMN ID and, for an SNPN, the NID that together with the PLMN ID identifies the SNPN. 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_PlmnIdNid_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_PlmnIdNid_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// Contains the serving core network operator PLMN ID and, for an SNPN, the NID that together with the PLMN ID identifies the SNPN. 
/// </summary>
class  PlmnIdNid
    : public ModelBase
{
public:
    PlmnIdNid();
    virtual ~PlmnIdNid();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// PlmnIdNid members

    /// <summary>
    /// Mobile Country Code part of the PLMN, comprising 3 digits, as defined in clause 9.3.3.5 of 3GPP TS 38.413.  
    /// </summary>
    utility::string_t getMcc() const;
    bool mccIsSet() const;
    void unsetMcc();

    void setMcc(const utility::string_t& value);

    /// <summary>
    /// Mobile Network Code part of the PLMN, comprising 2 or 3 digits, as defined in clause 9.3.3.5 of 3GPP TS 38.413.
    /// </summary>
    utility::string_t getMnc() const;
    bool mncIsSet() const;
    void unsetMnc();

    void setMnc(const utility::string_t& value);

    /// <summary>
    /// This represents the Network Identifier, which together with a PLMN ID is used to identify an SNPN (see 3GPP TS 23.003 and 3GPP TS 23.501 clause 5.30.2.1).  
    /// </summary>
    utility::string_t getNid() const;
    bool nidIsSet() const;
    void unsetNid();

    void setNid(const utility::string_t& value);


protected:
    utility::string_t m_Mcc;
    bool m_MccIsSet;
    utility::string_t m_Mnc;
    bool m_MncIsSet;
    utility::string_t m_Nid;
    bool m_NidIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_PlmnIdNid_H_ */
