/**
 * Nbsf_Management
 * Binding Support Management Service API.    Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).    All rights reserved.  
 *
 * The version of the OpenAPI document: 1.3.2
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.7.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * SnssaiDnnPair.h
 *
 * Contains a S-NSSAI and DNN combination.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_SnssaiDnnPair_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_SnssaiDnnPair_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/Snssai.h"
#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class Snssai;


/// <summary>
/// Contains a S-NSSAI and DNN combination.
/// </summary>
class  SnssaiDnnPair
    : public ModelBase
{
public:
    SnssaiDnnPair();
    virtual ~SnssaiDnnPair();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// SnssaiDnnPair members

    /// <summary>
    /// String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;  it shall contain either a DNN Network Identifier, or a full DNN with both the Network  Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are separated by dots  (e.g. \&quot;Label1.Label2.Label3\&quot;). 
    /// </summary>
    utility::string_t getDnn() const;
    bool dnnIsSet() const;
    void unsetDnn();

    void setDnn(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Snssai> getSnssai() const;
    bool snssaiIsSet() const;
    void unsetSnssai();

    void setSnssai(const std::shared_ptr<Snssai>& value);


protected:
    utility::string_t m_Dnn;
    bool m_DnnIsSet;
    std::shared_ptr<Snssai> m_Snssai;
    bool m_SnssaiIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_SnssaiDnnPair_H_ */
