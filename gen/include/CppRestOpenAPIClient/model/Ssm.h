/**
 * Nbsf_Management
 * Binding Support Management Service API.    Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).    All rights reserved.  
 *
 * The version of the OpenAPI document: 1.3.2
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.7.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Ssm.h
 *
 * Source specific IP multicast address
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_Ssm_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_Ssm_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/IpAddr.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

class IpAddr;


/// <summary>
/// Source specific IP multicast address
/// </summary>
class  Ssm
    : public ModelBase
{
public:
    Ssm();
    virtual ~Ssm();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Ssm members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<IpAddr> getSourceIpAddr() const;
    bool sourceIpAddrIsSet() const;
    void unsetSourceIpAddr();

    void setSourceIpAddr(const std::shared_ptr<IpAddr>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<IpAddr> getDestIpAddr() const;
    bool destIpAddrIsSet() const;
    void unsetDestIpAddr();

    void setDestIpAddr(const std::shared_ptr<IpAddr>& value);


protected:
    std::shared_ptr<IpAddr> m_SourceIpAddr;
    bool m_SourceIpAddrIsSet;
    std::shared_ptr<IpAddr> m_DestIpAddr;
    bool m_DestIpAddrIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_Ssm_H_ */
