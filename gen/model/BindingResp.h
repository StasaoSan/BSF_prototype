/**
 * Nbsf_Management
 * Binding Support Management Service API.    Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).    All rights reserved.  
 *
 * The version of the OpenAPI document: 1.3.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.7.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * BindingResp.h
 *
 * Contains the binding information for a PCF for a PDU Session.
 */

#ifndef BindingResp_H_
#define BindingResp_H_



#include <string>
#include "IpEndPoint.h"
#include <vector>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Contains the binding information for a PCF for a PDU Session.
/// </summary>
class  BindingResp 
{
public:
    BindingResp() = default;
    explicit BindingResp(boost::property_tree::ptree const& pt);
    virtual ~BindingResp() = default;

    BindingResp(const BindingResp& other) = default; // copy constructor
    BindingResp(BindingResp&& other) noexcept = default; // move constructor

    BindingResp& operator=(const BindingResp& other) = default; // copy assignment
    BindingResp& operator=(BindingResp&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// BindingResp members

    /// <summary>
    /// Fully Qualified Domain Name
    /// </summary>
    std::string getPcfSmFqdn() const;
    void setPcfSmFqdn(std::string value);

    /// <summary>
    /// IP end points of the PCF hosting the Npcf_SMPolicyControl service.
    /// </summary>
    std::vector<IpEndPoint> getPcfSmIpEndPoints() const;
    void setPcfSmIpEndPoints(std::vector<IpEndPoint> value);

protected:
    std::string m_PcfSmFqdn = "";
    std::vector<IpEndPoint> m_PcfSmIpEndPoints;
};

std::vector<BindingResp> createBindingRespVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<BindingResp>(const BindingResp& val) {
    return val.toPropertyTree();
}

template<>
inline BindingResp fromPt<BindingResp>(const boost::property_tree::ptree& pt) {
    BindingResp ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* BindingResp_H_ */
