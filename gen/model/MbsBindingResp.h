/**
 * Nbsf_Management
 * Binding Support Management Service API.    Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).    All rights reserved.  
 *
 * The version of the OpenAPI document: 1.3.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.7.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * MbsBindingResp.h
 *
 * Contains the binding information for a PCF for an MBS Session.
 */

#ifndef MbsBindingResp_H_
#define MbsBindingResp_H_



#include <string>
#include "IpEndPoint.h"
#include <vector>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Contains the binding information for a PCF for an MBS Session.
/// </summary>
class  MbsBindingResp 
{
public:
    MbsBindingResp() = default;
    explicit MbsBindingResp(boost::property_tree::ptree const& pt);
    virtual ~MbsBindingResp() = default;

    MbsBindingResp(const MbsBindingResp& other) = default; // copy constructor
    MbsBindingResp(MbsBindingResp&& other) noexcept = default; // move constructor

    MbsBindingResp& operator=(const MbsBindingResp& other) = default; // copy assignment
    MbsBindingResp& operator=(MbsBindingResp&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// MbsBindingResp members

    /// <summary>
    /// Fully Qualified Domain Name
    /// </summary>
    std::string getPcfFqdn() const;
    void setPcfFqdn(std::string value);

    /// <summary>
    /// IP end points of the PCF handling the MBS Session.
    /// </summary>
    std::vector<IpEndPoint> getPcfIpEndPoints() const;
    void setPcfIpEndPoints(std::vector<IpEndPoint> value);

protected:
    std::string m_PcfFqdn = "";
    std::vector<IpEndPoint> m_PcfIpEndPoints;
};

std::vector<MbsBindingResp> createMbsBindingRespVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<MbsBindingResp>(const MbsBindingResp& val) {
    return val.toPropertyTree();
}

template<>
inline MbsBindingResp fromPt<MbsBindingResp>(const boost::property_tree::ptree& pt) {
    MbsBindingResp ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* MbsBindingResp_H_ */
