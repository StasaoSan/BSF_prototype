/**
 * Nbsf_Management
 * Binding Support Management Service API.    Â© 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).    All rights reserved.  
 *
 * The version of the OpenAPI document: 1.3.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.7.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * PlmnId.h
 *
 * When PlmnId needs to be converted to string (e.g. when used in maps as key), the string  shall be composed of three digits \&quot;mcc\&quot; followed by \&quot;-\&quot; and two or three digits \&quot;mnc\&quot;. 
 */

#ifndef PlmnId_H_
#define PlmnId_H_



#include <string>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// When PlmnId needs to be converted to string (e.g. when used in maps as key), the string  shall be composed of three digits \&quot;mcc\&quot; followed by \&quot;-\&quot; and two or three digits \&quot;mnc\&quot;. 
/// </summary>
class  PlmnId 
{
public:
    PlmnId() = default;
    explicit PlmnId(boost::property_tree::ptree const& pt);
    virtual ~PlmnId() = default;

    PlmnId(const PlmnId& other) = default; // copy constructor
    PlmnId(PlmnId&& other) noexcept = default; // move constructor

    PlmnId& operator=(const PlmnId& other) = default; // copy assignment
    PlmnId& operator=(PlmnId&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// PlmnId members

    /// <summary>
    /// Mobile Country Code part of the PLMN, comprising 3 digits, as defined in clause 9.3.3.5 of 3GPP TS 38.413.  
    /// </summary>
    std::string getMcc() const;
    void setMcc(std::string value);

    /// <summary>
    /// Mobile Network Code part of the PLMN, comprising 2 or 3 digits, as defined in clause 9.3.3.5 of 3GPP TS 38.413.
    /// </summary>
    std::string getMnc() const;
    void setMnc(std::string value);

protected:
    std::string m_Mcc = "";
    std::string m_Mnc = "";
};

std::vector<PlmnId> createPlmnIdVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<PlmnId>(const PlmnId& val) {
    return val.toPropertyTree();
}

template<>
inline PlmnId fromPt<PlmnId>(const boost::property_tree::ptree& pt) {
    PlmnId ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* PlmnId_H_ */
